# action.yml
name: 'FireClover AWS Login'
description: 'FireClover AWS Login'
branding:
  icon: 'log-in'
  color: 'orange'

inputs:
  fireclover-client-id:
    description: 'The FireClover CICD Client ID'
    required: true
  fireclover-client-secret:
    description: 'The FireClover CICD Client Secret'
    required: true
  login-server-token-endpoint:
    description: 'The FireClover login server to authenticate to'
  aws-account-id:
    description: 'The AWS account ID to deploy into. Default to env $AWS_ACCOUNT_ID'
    required: false
  aws-region:
    description: 'What AWS region to deploy to'
    required: false
  aws-role-session-name:
    description: 'What name to use for the session'
    required: false
  aws-web-identity-token-file:
    description: 'The file storing the temporary JWT used for AWS'
    required: false
  aws-role-name:
    description: 'The AWS role name to use for the session. Defaults to FireCloverAdmin'

env:
  AWS_ROLE_SESSION_NAME: ${{ inputs.aws-role-session-name || 'FireCloverActions' }}
  AWS_REGION: ${{ inputs.aws-region || eu-north-1 }}
  AWS_ACCOUNT_ID: ${{ inputs.aws-account-id || env.AWS_ACCOUNT_ID }}
  AWS_ROLE_ARN: arn:aws:iam::${{ inputs.aws-account-id || env.AWS_ACCOUNT_ID }}:role/${{ inputs.aws-role-name || 'FireCloverAdmin' }}
  AWS_WEB_IDENTITY_TOKEN_FILE: ${{ inputs.aws-web-identity-token-file || '/tmp/aws-token-file' }}
    
runs:
  using: composite
  steps:
    - name: Config AWS creds
      run: |
        if [ -z "$ACTIONS_RUNNER_DEBUG" ]
        then
            curl -s -u "${{ inputs.fireclover-client-id }}:${{ inputs.fireclover-client-secret }}" -H "content-type: application/json" "${{ inputs.login-server-token-endpoint || 'https://login.ms.fireclover.cloud/oauth2/token' }}" -d '{"grant_type":"client_credentials"}' | jq -r '.access_token' > $AWS_WEB_IDENTITY_TOKEN_FILE
        else
            curl -v -u "${{ inputs.fireclover-client-id }}:${{ inputs.fireclover-client-secret }}" -H "content-type: application/json" "${{ inputs.login-server-token-endpoint || 'https://login.ms.fireclover.cloud/oauth2/token' }}" -d '{"grant_type":"client_credentials"}' -o token.json
            jq -r '.access_token' token.json > $AWS_WEB_IDENTITY_TOKEN_FILE
        fi
        #echo "AWS_WEB_IDENTITY_TOKEN_FILE=${{ env.AWS_WEB_IDENTITY_TOKEN_FILE }}" >> $GITHUB_ENV
        #echo "AWS_ROLE_SESSION_NAME=${{ env.AWS_ROLE_SESSION_NAME }}" >> $GITHUB_ENV
        #echo "AWS_ROLE_ARN=${{ env.AWS_ROLE_ARN }}" >> $GITHUB_ENV
