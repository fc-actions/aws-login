# action.yml
name: 'FireClover AWS Login'
description: 'FireClover AWS Login'
branding:
  icon: 'log-in'
  color: 'orange'

inputs:
  fireclover-client-id:
    description: 'The FireClover CICD Client ID'
    required: true
  fireclover-service-account:
    description: 'The FireClover CICD Service Account'
    required: true
  fireclover-service-account-token:
    description: 'The FireClover CICD Service Account Token'
    required: true    
  login-server-token-endpoint:
    description: 'The FireClover login server to authenticate to'
    default: 'https://sso.fireclover.no/application/o/token/'
  aws-account-id:
    description: 'The AWS account ID to deploy into. Default to env $AWS_ACCOUNT_ID'
    required: false
  aws-region:
    description: 'What AWS region to deploy to'
    required: false
  aws-role-session-name:
    description: 'What name to use for the session'
    required: false
  aws-web-identity-token-file:
    description: 'The file storing the temporary JWT used for AWS'
    required: false
  aws-role-name:
    description: 'The AWS role name to use for the session. Defaults to FireCloverAdmin'
  verify:
    default: false

runs:
  using: composite
  steps:
    - uses: aws-actions/configure-aws-credentials@v4
      if: ${{ !inputs.fireclover-client-id && !inputs.fireclover-client-secret }}
      with:
        role-to-assume: arn:aws:iam::${{ inputs.aws-account-id || env.AWS_ACCOUNT_ID }}:role/${{ inputs.aws-role-name || 'FireCloverAdmin' }}
        role-session-name: ${{ inputs.aws-role-session-name || 'FireCloverActions' }}
        aws-region: ${{ inputs.aws-region || 'us-east-1' }}

    - shell: bash
      if: ${{ inputs.fireclover-client-id && inputs.fireclover-client-secret }}
      run: |
        echo "Config AWS creds"
        export AWS_ROLE_SESSION_NAME=${{ inputs.aws-role-session-name || 'FireCloverActions' }}
        export AWS_REGION=${{ inputs.aws-region || 'eu-north-1' }}
        export AWS_ACCOUNT_ID=${{ inputs.aws-account-id || env.AWS_ACCOUNT_ID }}
        export AWS_ROLE_ARN=arn:aws:iam::${{ inputs.aws-account-id || env.AWS_ACCOUNT_ID }}:role/${{ inputs.aws-role-name || 'FireCloverAdmin' }}
        export AWS_WEB_IDENTITY_TOKEN_FILE=${{ inputs.aws-web-identity-token-file || '/tmp/aws-token-file' }}
        curl -s -H "content-type: application/x-www-form-urlencoded" "${{ inputs.login-server-token-endpoint || 'https://sso.fireclover.no/application/o/token/' }}" -d "grant_type=client_credentials&client_id=${{ inputs.fireclover-client-id }}&username=${{ inputs.fireclover-service-account }}&scope=profile&password=${{ inputs.fireclover-service-account-token }}" | jq -r '.access_token' > $AWS_WEB_IDENTITY_TOKEN_FILE
        echo "AWS_WEB_IDENTITY_TOKEN_FILE=$AWS_WEB_IDENTITY_TOKEN_FILE" >> $GITHUB_ENV
        echo "AWS_ROLE_SESSION_NAME=$AWS_ROLE_SESSION_NAME" >> $GITHUB_ENV
        echo "AWS_ROLE_ARN=$AWS_ROLE_ARN" >> $GITHUB_ENV

    - shell: bash
      if: ${{ inputs.verify }}
      run: |
        echo "Verify credentials"
        cat $AWS_WEB_IDENTITY_TOKEN_FILE
        pip3 install awscli -q -q -q --break-system-packages
        aws sts get-caller-identity
